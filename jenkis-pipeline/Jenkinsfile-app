pipeline {
    agent any
    
    environment {
        // Regi칚o da AWS onde os recursos est칚o localizados
        AWS_DEFAULT_REGION = "us-east-1"
        // Credenciais AWS configuradas no Jenkins (ID da credencial)
        THE_BUTLER_SAYS_SO = credentials('jk-aws-credentials')
        // Nome do cluster ECS onde a aplica칞칚o ser치 deployada
        ECS_CLUSTER = 'jk-webapp-cluster'
        // Nome do servi칞o ECS que ser치 atualizado
        ECS_SERVICE = 'jk-webapp-svc'
        // Diret칩rio onde est칚o os arquivos da aplica칞칚o (Dockerfile, etc.)
        APP_DIR = "app"
    }

    stages {
        stage('Jenkins user checking if aws-cli is installed') {
            steps {
                // Verifica se o AWS CLI est치 instalado e funcionando
                sh 'aws --version'
            }
        }
        
        stage('Jenkins user listing aws resources') {
            steps {
                // Testa as credenciais AWS listando recursos b치sicos
                // Isso confirma que as permiss칫es est칚o funcionando
                sh '''
                    aws s3 ls
                    aws ec2 describe-instances
                '''
            }
        }
        
        stage('Jenkins Build and push image for ECR') {
            steps {
                script {
                    // Navega para o diret칩rio da aplica칞칚o e lista os arquivos
                    sh "bash -c 'cd ${env.APP_DIR} && pwd && ls -la'"
                    
                    // 丘멆잺  SUBSTITUA OS VALORES ABAIXO PELOS COMANDOS DO SEU REPOSIT칍RIO ECR
                    // Acesse: AWS Console > ECR > Reposit칩rios > [seu-repo] > "View push commands"
                    sh '''
                        cd app
                        # Faz logout de qualquer registry Docker anterior
                        docker logout
                        
                        # 游댃 SUBSTITUA pela linha de login do seu ECR:
                        aws ecr get-login-password --region SUA_REGIAO | docker login --username AWS --password-stdin SEU_ACCOUNT_ID.dkr.ecr.SUA_REGIAO.amazonaws.com
                        # Ex: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 503561427708.dkr.ecr.us-east-1.amazonaws.com
                        
                        # 游댃 SUBSTITUA pelo nome do seu reposit칩rio:
                        docker build -t SEU_REPO_NAME:latest .
                        # Ex: docker build -t jk-webapp:latest .
                        
                        # 游댃 SUBSTITUA pela URI completa do seu reposit칩rio ECR:
                        docker tag SEU_REPO_NAME:latest SEU_ACCOUNT_ID.dkr.ecr.SUA_REGIAO.amazonaws.com/SEU_REPO_NAME:latest
                        # Ex: docker tag jk-webapp:latest 503561427708.dkr.ecr.us-east-1.amazonaws.com/jk-webapp:latest
                        
                        # 游댃 SUBSTITUA pela URI completa do seu reposit칩rio ECR:
                        docker push SEU_ACCOUNT_ID.dkr.ecr.SUA_REGIAO.amazonaws.com/SEU_REPO_NAME:latest
                        # Ex: docker push 503561427708.dkr.ecr.us-east-1.amazonaws.com/jk-webapp:latest
                    '''
                }
            }
        }
        
        stage('Deploying Webapp Application on AWS ECS') {
            steps {
                // For칞a uma nova implanta칞칚o do servi칞o ECS
                // Isso far치 o ECS baixar a nova imagem do ECR e atualizar os containers
                sh 'aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment'
            }
        }
    }
}
