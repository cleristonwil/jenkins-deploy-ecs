pipeline {
    agent any
    
    environment {
        // Diretório onde estão os arquivos Terraform (relativo ao workspace do Jenkins)
        TERRAFORM_DIR = "terraform-ecs"
        // Diretório dos módulos Terraform (relativo ao workspace do Jenkins)
        TERRAFORM_DIR_MODULE = "terraform-ecs/modules"
    }

    stages {
        stage('Terraform validate') {
            steps {
                // Verifica se o Terraform está instalado e mostra a versão
                sh 'terraform --version'
            }
        }
        
        stage('Terraform init') {
            steps {
                script {
                    // Inicializa o Terraform no diretório especificado
                    // O 'init' baixa os providers e módulos necessários
                    sh "bash -c 'cd ${env.TERRAFORM_DIR} && terraform init'"
                }
            }
        }
        
        stage('Terraform fmt') {
            steps {
                script {
                    // Formata o código Terraform seguindo as convenções
                    // Executa tanto no diretório principal quanto nos módulos
                    sh "bash -c 'cd ${env.TERRAFORM_DIR} && terraform fmt'"
                    sh "bash -c 'cd ${env.TERRAFORM_DIR_MODULE} && terraform fmt'"
                }
            }
        }
        
         stage('Terraform plan') {
            steps {
                script {
                    // Cria um plano de execução mostrando quais recursos serão criados
                    // Não faz alterações, apenas mostra o que será feito
                    sh "bash -c 'cd ${env.TERRAFORM_DIR} && terraform plan'"
                }
            }
        }
        
        stage('Terraform apply') {
            steps {
                script {
                    // Aplica as mudanças definidas no código Terraform
                    // O '-auto-approve' pula a confirmação manual
                    // ⚠️  CUIDADO: Isso criará recursos reais na AWS que podem gerar custos
                    sh "bash -c 'cd ${env.TERRAFORM_DIR} && terraform apply -auto-approve'"
                }
            }
        }
    }
}
